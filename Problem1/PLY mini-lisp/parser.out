Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> exp
Rule 1     exp -> LPAREN call call RPAREN
Rule 2     exp -> LPAREN call RPAREN
Rule 3     exp -> atom
Rule 4     exp -> quoted_list
Rule 5     exp -> call
Rule 6     quoted_list -> QUOTE list
Rule 7     list -> LPAREN items RPAREN
Rule 8     items -> item items
Rule 9     items -> empty
Rule 10    empty -> <empty>
Rule 11    item -> atom
Rule 12    item -> quoted_list
Rule 13    item -> call
Rule 14    item -> empty
Rule 15    call -> LET LPAREN SIMB NUM RPAREN
Rule 16    call -> IF bool atom atom
Rule 17    call -> LPAREN SIMB items RPAREN
Rule 18    atom -> SIMB
Rule 19    atom -> bool
Rule 20    atom -> NUM
Rule 21    atom -> TEXT
Rule 22    atom -> <empty>
Rule 23    bool -> TRUE
Rule 24    bool -> FALSE
Rule 25    atom -> NIL

Terminals, with rules where they appear

FALSE                : 24
IF                   : 16
LET                  : 15
LPAREN               : 1 2 7 15 17
NIL                  : 25
NUM                  : 15 20
QUOTE                : 6
RPAREN               : 1 2 7 15 17
SIMB                 : 15 17 18
TEXT                 : 21
TRUE                 : 23
error                : 

Nonterminals, with rules where they appear

atom                 : 3 11 16 16
bool                 : 16 19
call                 : 1 1 2 5 13
empty                : 9 14
exp                  : 0
item                 : 8
items                : 7 8 17
list                 : 6
quoted_list          : 4 12

Parsing method: LALR

state 0

    (0) S' -> . exp
    (1) exp -> . LPAREN call call RPAREN
    (2) exp -> . LPAREN call RPAREN
    (3) exp -> . atom
    (4) exp -> . quoted_list
    (5) exp -> . call
    (18) atom -> . SIMB
    (19) atom -> . bool
    (20) atom -> . NUM
    (21) atom -> . TEXT
    (22) atom -> .
    (25) atom -> . NIL
    (6) quoted_list -> . QUOTE list
    (15) call -> . LET LPAREN SIMB NUM RPAREN
    (16) call -> . IF bool atom atom
    (17) call -> . LPAREN SIMB items RPAREN
    (23) bool -> . TRUE
    (24) bool -> . FALSE

    LPAREN          shift and go to state 4
    SIMB            shift and go to state 8
    NUM             shift and go to state 3
    TEXT            shift and go to state 7
    $end            reduce using rule 22 (atom -> .)
    NIL             shift and go to state 10
    QUOTE           shift and go to state 1
    LET             shift and go to state 11
    IF              shift and go to state 15
    TRUE            shift and go to state 5
    FALSE           shift and go to state 12

    bool                           shift and go to state 2
    quoted_list                    shift and go to state 6
    call                           shift and go to state 9
    exp                            shift and go to state 13
    atom                           shift and go to state 14

state 1

    (6) quoted_list -> QUOTE . list
    (7) list -> . LPAREN items RPAREN

    LPAREN          shift and go to state 16

    list                           shift and go to state 17

state 2

    (19) atom -> bool .

    SIMB            reduce using rule 19 (atom -> bool .)
    NUM             reduce using rule 19 (atom -> bool .)
    TEXT            reduce using rule 19 (atom -> bool .)
    NIL             reduce using rule 19 (atom -> bool .)
    TRUE            reduce using rule 19 (atom -> bool .)
    FALSE           reduce using rule 19 (atom -> bool .)
    $end            reduce using rule 19 (atom -> bool .)
    RPAREN          reduce using rule 19 (atom -> bool .)
    LET             reduce using rule 19 (atom -> bool .)
    IF              reduce using rule 19 (atom -> bool .)
    LPAREN          reduce using rule 19 (atom -> bool .)
    QUOTE           reduce using rule 19 (atom -> bool .)


state 3

    (20) atom -> NUM .

    SIMB            reduce using rule 20 (atom -> NUM .)
    NUM             reduce using rule 20 (atom -> NUM .)
    TEXT            reduce using rule 20 (atom -> NUM .)
    NIL             reduce using rule 20 (atom -> NUM .)
    TRUE            reduce using rule 20 (atom -> NUM .)
    FALSE           reduce using rule 20 (atom -> NUM .)
    $end            reduce using rule 20 (atom -> NUM .)
    RPAREN          reduce using rule 20 (atom -> NUM .)
    LET             reduce using rule 20 (atom -> NUM .)
    IF              reduce using rule 20 (atom -> NUM .)
    LPAREN          reduce using rule 20 (atom -> NUM .)
    QUOTE           reduce using rule 20 (atom -> NUM .)


state 4

    (1) exp -> LPAREN . call call RPAREN
    (2) exp -> LPAREN . call RPAREN
    (17) call -> LPAREN . SIMB items RPAREN
    (15) call -> . LET LPAREN SIMB NUM RPAREN
    (16) call -> . IF bool atom atom
    (17) call -> . LPAREN SIMB items RPAREN

    SIMB            shift and go to state 19
    LET             shift and go to state 11
    IF              shift and go to state 15
    LPAREN          shift and go to state 18

    call                           shift and go to state 20

state 5

    (23) bool -> TRUE .

    $end            reduce using rule 23 (bool -> TRUE .)
    RPAREN          reduce using rule 23 (bool -> TRUE .)
    LET             reduce using rule 23 (bool -> TRUE .)
    IF              reduce using rule 23 (bool -> TRUE .)
    LPAREN          reduce using rule 23 (bool -> TRUE .)
    SIMB            reduce using rule 23 (bool -> TRUE .)
    NUM             reduce using rule 23 (bool -> TRUE .)
    TEXT            reduce using rule 23 (bool -> TRUE .)
    NIL             reduce using rule 23 (bool -> TRUE .)
    QUOTE           reduce using rule 23 (bool -> TRUE .)
    TRUE            reduce using rule 23 (bool -> TRUE .)
    FALSE           reduce using rule 23 (bool -> TRUE .)


state 6

    (4) exp -> quoted_list .

    $end            reduce using rule 4 (exp -> quoted_list .)


state 7

    (21) atom -> TEXT .

    SIMB            reduce using rule 21 (atom -> TEXT .)
    NUM             reduce using rule 21 (atom -> TEXT .)
    TEXT            reduce using rule 21 (atom -> TEXT .)
    NIL             reduce using rule 21 (atom -> TEXT .)
    TRUE            reduce using rule 21 (atom -> TEXT .)
    FALSE           reduce using rule 21 (atom -> TEXT .)
    $end            reduce using rule 21 (atom -> TEXT .)
    RPAREN          reduce using rule 21 (atom -> TEXT .)
    LET             reduce using rule 21 (atom -> TEXT .)
    IF              reduce using rule 21 (atom -> TEXT .)
    LPAREN          reduce using rule 21 (atom -> TEXT .)
    QUOTE           reduce using rule 21 (atom -> TEXT .)


state 8

    (18) atom -> SIMB .

    SIMB            reduce using rule 18 (atom -> SIMB .)
    NUM             reduce using rule 18 (atom -> SIMB .)
    TEXT            reduce using rule 18 (atom -> SIMB .)
    NIL             reduce using rule 18 (atom -> SIMB .)
    TRUE            reduce using rule 18 (atom -> SIMB .)
    FALSE           reduce using rule 18 (atom -> SIMB .)
    $end            reduce using rule 18 (atom -> SIMB .)
    RPAREN          reduce using rule 18 (atom -> SIMB .)
    LET             reduce using rule 18 (atom -> SIMB .)
    IF              reduce using rule 18 (atom -> SIMB .)
    LPAREN          reduce using rule 18 (atom -> SIMB .)
    QUOTE           reduce using rule 18 (atom -> SIMB .)


state 9

    (5) exp -> call .

    $end            reduce using rule 5 (exp -> call .)


state 10

    (25) atom -> NIL .

    SIMB            reduce using rule 25 (atom -> NIL .)
    NUM             reduce using rule 25 (atom -> NIL .)
    TEXT            reduce using rule 25 (atom -> NIL .)
    NIL             reduce using rule 25 (atom -> NIL .)
    TRUE            reduce using rule 25 (atom -> NIL .)
    FALSE           reduce using rule 25 (atom -> NIL .)
    $end            reduce using rule 25 (atom -> NIL .)
    RPAREN          reduce using rule 25 (atom -> NIL .)
    LET             reduce using rule 25 (atom -> NIL .)
    IF              reduce using rule 25 (atom -> NIL .)
    LPAREN          reduce using rule 25 (atom -> NIL .)
    QUOTE           reduce using rule 25 (atom -> NIL .)


state 11

    (15) call -> LET . LPAREN SIMB NUM RPAREN

    LPAREN          shift and go to state 21


state 12

    (24) bool -> FALSE .

    $end            reduce using rule 24 (bool -> FALSE .)
    RPAREN          reduce using rule 24 (bool -> FALSE .)
    LET             reduce using rule 24 (bool -> FALSE .)
    IF              reduce using rule 24 (bool -> FALSE .)
    LPAREN          reduce using rule 24 (bool -> FALSE .)
    SIMB            reduce using rule 24 (bool -> FALSE .)
    NUM             reduce using rule 24 (bool -> FALSE .)
    TEXT            reduce using rule 24 (bool -> FALSE .)
    NIL             reduce using rule 24 (bool -> FALSE .)
    QUOTE           reduce using rule 24 (bool -> FALSE .)
    TRUE            reduce using rule 24 (bool -> FALSE .)
    FALSE           reduce using rule 24 (bool -> FALSE .)


state 13

    (0) S' -> exp .



state 14

    (3) exp -> atom .

    $end            reduce using rule 3 (exp -> atom .)


state 15

    (16) call -> IF . bool atom atom
    (23) bool -> . TRUE
    (24) bool -> . FALSE

    TRUE            shift and go to state 5
    FALSE           shift and go to state 12

    bool                           shift and go to state 22

state 16

    (7) list -> LPAREN . items RPAREN
    (8) items -> . item items
    (9) items -> . empty
    (11) item -> . atom
    (12) item -> . quoted_list
    (13) item -> . call
    (14) item -> . empty
    (10) empty -> .
    (18) atom -> . SIMB
    (19) atom -> . bool
    (20) atom -> . NUM
    (21) atom -> . TEXT
    (22) atom -> .
    (25) atom -> . NIL
    (6) quoted_list -> . QUOTE list
    (15) call -> . LET LPAREN SIMB NUM RPAREN
    (16) call -> . IF bool atom atom
    (17) call -> . LPAREN SIMB items RPAREN
    (23) bool -> . TRUE
    (24) bool -> . FALSE

  ! shift/reduce conflict for SIMB resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! shift/reduce conflict for SIMB resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! reduce/reduce conflict for NIL resolved using rule 10 (empty -> .)
  ! reduce/reduce conflict for QUOTE resolved using rule 10 (empty -> .)
  ! reduce/reduce conflict for LET resolved using rule 10 (empty -> .)
  ! reduce/reduce conflict for IF resolved using rule 10 (empty -> .)
  ! reduce/reduce conflict for LPAREN resolved using rule 10 (empty -> .)
  ! reduce/reduce conflict for TRUE resolved using rule 10 (empty -> .)
  ! reduce/reduce conflict for FALSE resolved using rule 10 (empty -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 10 (empty -> .)
  ! shift/reduce conflict for NIL resolved as shift
  ! shift/reduce conflict for QUOTE resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    RPAREN          reduce using rule 10 (empty -> .)
    SIMB            shift and go to state 8
    NUM             shift and go to state 3
    TEXT            shift and go to state 7
    NIL             shift and go to state 10
    QUOTE           shift and go to state 1
    LET             shift and go to state 11
    IF              shift and go to state 15
    LPAREN          shift and go to state 18
    TRUE            shift and go to state 5
    FALSE           shift and go to state 12

  ! SIMB            [ reduce using rule 10 (empty -> .) ]
  ! NUM             [ reduce using rule 10 (empty -> .) ]
  ! TEXT            [ reduce using rule 10 (empty -> .) ]
  ! NIL             [ reduce using rule 10 (empty -> .) ]
  ! QUOTE           [ reduce using rule 10 (empty -> .) ]
  ! LET             [ reduce using rule 10 (empty -> .) ]
  ! IF              [ reduce using rule 10 (empty -> .) ]
  ! LPAREN          [ reduce using rule 10 (empty -> .) ]
  ! TRUE            [ reduce using rule 10 (empty -> .) ]
  ! FALSE           [ reduce using rule 10 (empty -> .) ]
  ! SIMB            [ reduce using rule 22 (atom -> .) ]
  ! NUM             [ reduce using rule 22 (atom -> .) ]
  ! TEXT            [ reduce using rule 22 (atom -> .) ]
  ! NIL             [ reduce using rule 22 (atom -> .) ]
  ! QUOTE           [ reduce using rule 22 (atom -> .) ]
  ! LET             [ reduce using rule 22 (atom -> .) ]
  ! IF              [ reduce using rule 22 (atom -> .) ]
  ! LPAREN          [ reduce using rule 22 (atom -> .) ]
  ! TRUE            [ reduce using rule 22 (atom -> .) ]
  ! FALSE           [ reduce using rule 22 (atom -> .) ]
  ! RPAREN          [ reduce using rule 22 (atom -> .) ]

    item                           shift and go to state 23
    bool                           shift and go to state 2
    quoted_list                    shift and go to state 24
    empty                          shift and go to state 25
    call                           shift and go to state 26
    atom                           shift and go to state 27
    items                          shift and go to state 28

state 17

    (6) quoted_list -> QUOTE list .

    SIMB            reduce using rule 6 (quoted_list -> QUOTE list .)
    NUM             reduce using rule 6 (quoted_list -> QUOTE list .)
    TEXT            reduce using rule 6 (quoted_list -> QUOTE list .)
    NIL             reduce using rule 6 (quoted_list -> QUOTE list .)
    QUOTE           reduce using rule 6 (quoted_list -> QUOTE list .)
    LET             reduce using rule 6 (quoted_list -> QUOTE list .)
    IF              reduce using rule 6 (quoted_list -> QUOTE list .)
    LPAREN          reduce using rule 6 (quoted_list -> QUOTE list .)
    TRUE            reduce using rule 6 (quoted_list -> QUOTE list .)
    FALSE           reduce using rule 6 (quoted_list -> QUOTE list .)
    RPAREN          reduce using rule 6 (quoted_list -> QUOTE list .)
    $end            reduce using rule 6 (quoted_list -> QUOTE list .)


state 18

    (17) call -> LPAREN . SIMB items RPAREN

    SIMB            shift and go to state 19


state 19

    (17) call -> LPAREN SIMB . items RPAREN
    (8) items -> . item items
    (9) items -> . empty
    (11) item -> . atom
    (12) item -> . quoted_list
    (13) item -> . call
    (14) item -> . empty
    (10) empty -> .
    (18) atom -> . SIMB
    (19) atom -> . bool
    (20) atom -> . NUM
    (21) atom -> . TEXT
    (22) atom -> .
    (25) atom -> . NIL
    (6) quoted_list -> . QUOTE list
    (15) call -> . LET LPAREN SIMB NUM RPAREN
    (16) call -> . IF bool atom atom
    (17) call -> . LPAREN SIMB items RPAREN
    (23) bool -> . TRUE
    (24) bool -> . FALSE

  ! shift/reduce conflict for SIMB resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! shift/reduce conflict for SIMB resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! reduce/reduce conflict for NIL resolved using rule 10 (empty -> .)
  ! reduce/reduce conflict for QUOTE resolved using rule 10 (empty -> .)
  ! reduce/reduce conflict for LET resolved using rule 10 (empty -> .)
  ! reduce/reduce conflict for IF resolved using rule 10 (empty -> .)
  ! reduce/reduce conflict for LPAREN resolved using rule 10 (empty -> .)
  ! reduce/reduce conflict for TRUE resolved using rule 10 (empty -> .)
  ! reduce/reduce conflict for FALSE resolved using rule 10 (empty -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 10 (empty -> .)
  ! shift/reduce conflict for NIL resolved as shift
  ! shift/reduce conflict for QUOTE resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    RPAREN          reduce using rule 10 (empty -> .)
    SIMB            shift and go to state 8
    NUM             shift and go to state 3
    TEXT            shift and go to state 7
    NIL             shift and go to state 10
    QUOTE           shift and go to state 1
    LET             shift and go to state 11
    IF              shift and go to state 15
    LPAREN          shift and go to state 18
    TRUE            shift and go to state 5
    FALSE           shift and go to state 12

  ! SIMB            [ reduce using rule 10 (empty -> .) ]
  ! NUM             [ reduce using rule 10 (empty -> .) ]
  ! TEXT            [ reduce using rule 10 (empty -> .) ]
  ! NIL             [ reduce using rule 10 (empty -> .) ]
  ! QUOTE           [ reduce using rule 10 (empty -> .) ]
  ! LET             [ reduce using rule 10 (empty -> .) ]
  ! IF              [ reduce using rule 10 (empty -> .) ]
  ! LPAREN          [ reduce using rule 10 (empty -> .) ]
  ! TRUE            [ reduce using rule 10 (empty -> .) ]
  ! FALSE           [ reduce using rule 10 (empty -> .) ]
  ! SIMB            [ reduce using rule 22 (atom -> .) ]
  ! NUM             [ reduce using rule 22 (atom -> .) ]
  ! TEXT            [ reduce using rule 22 (atom -> .) ]
  ! NIL             [ reduce using rule 22 (atom -> .) ]
  ! QUOTE           [ reduce using rule 22 (atom -> .) ]
  ! LET             [ reduce using rule 22 (atom -> .) ]
  ! IF              [ reduce using rule 22 (atom -> .) ]
  ! LPAREN          [ reduce using rule 22 (atom -> .) ]
  ! TRUE            [ reduce using rule 22 (atom -> .) ]
  ! FALSE           [ reduce using rule 22 (atom -> .) ]
  ! RPAREN          [ reduce using rule 22 (atom -> .) ]

    item                           shift and go to state 23
    bool                           shift and go to state 2
    quoted_list                    shift and go to state 24
    empty                          shift and go to state 25
    call                           shift and go to state 26
    atom                           shift and go to state 27
    items                          shift and go to state 29

state 20

    (1) exp -> LPAREN call . call RPAREN
    (2) exp -> LPAREN call . RPAREN
    (15) call -> . LET LPAREN SIMB NUM RPAREN
    (16) call -> . IF bool atom atom
    (17) call -> . LPAREN SIMB items RPAREN

    RPAREN          shift and go to state 30
    LET             shift and go to state 11
    IF              shift and go to state 15
    LPAREN          shift and go to state 18

    call                           shift and go to state 31

state 21

    (15) call -> LET LPAREN . SIMB NUM RPAREN

    SIMB            shift and go to state 32


state 22

    (16) call -> IF bool . atom atom
    (18) atom -> . SIMB
    (19) atom -> . bool
    (20) atom -> . NUM
    (21) atom -> . TEXT
    (22) atom -> .
    (25) atom -> . NIL
    (23) bool -> . TRUE
    (24) bool -> . FALSE

  ! shift/reduce conflict for SIMB resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! shift/reduce conflict for NIL resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    SIMB            shift and go to state 8
    NUM             shift and go to state 3
    TEXT            shift and go to state 7
    $end            reduce using rule 22 (atom -> .)
    RPAREN          reduce using rule 22 (atom -> .)
    LET             reduce using rule 22 (atom -> .)
    IF              reduce using rule 22 (atom -> .)
    LPAREN          reduce using rule 22 (atom -> .)
    QUOTE           reduce using rule 22 (atom -> .)
    NIL             shift and go to state 10
    TRUE            shift and go to state 5
    FALSE           shift and go to state 12

  ! SIMB            [ reduce using rule 22 (atom -> .) ]
  ! NUM             [ reduce using rule 22 (atom -> .) ]
  ! TEXT            [ reduce using rule 22 (atom -> .) ]
  ! NIL             [ reduce using rule 22 (atom -> .) ]
  ! TRUE            [ reduce using rule 22 (atom -> .) ]
  ! FALSE           [ reduce using rule 22 (atom -> .) ]

    bool                           shift and go to state 2
    atom                           shift and go to state 33

state 23

    (8) items -> item . items
    (8) items -> . item items
    (9) items -> . empty
    (11) item -> . atom
    (12) item -> . quoted_list
    (13) item -> . call
    (14) item -> . empty
    (10) empty -> .
    (18) atom -> . SIMB
    (19) atom -> . bool
    (20) atom -> . NUM
    (21) atom -> . TEXT
    (22) atom -> .
    (25) atom -> . NIL
    (6) quoted_list -> . QUOTE list
    (15) call -> . LET LPAREN SIMB NUM RPAREN
    (16) call -> . IF bool atom atom
    (17) call -> . LPAREN SIMB items RPAREN
    (23) bool -> . TRUE
    (24) bool -> . FALSE

  ! shift/reduce conflict for SIMB resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! shift/reduce conflict for SIMB resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! reduce/reduce conflict for NIL resolved using rule 10 (empty -> .)
  ! reduce/reduce conflict for QUOTE resolved using rule 10 (empty -> .)
  ! reduce/reduce conflict for LET resolved using rule 10 (empty -> .)
  ! reduce/reduce conflict for IF resolved using rule 10 (empty -> .)
  ! reduce/reduce conflict for LPAREN resolved using rule 10 (empty -> .)
  ! reduce/reduce conflict for TRUE resolved using rule 10 (empty -> .)
  ! reduce/reduce conflict for FALSE resolved using rule 10 (empty -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 10 (empty -> .)
  ! shift/reduce conflict for NIL resolved as shift
  ! shift/reduce conflict for QUOTE resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    RPAREN          reduce using rule 10 (empty -> .)
    SIMB            shift and go to state 8
    NUM             shift and go to state 3
    TEXT            shift and go to state 7
    NIL             shift and go to state 10
    QUOTE           shift and go to state 1
    LET             shift and go to state 11
    IF              shift and go to state 15
    LPAREN          shift and go to state 18
    TRUE            shift and go to state 5
    FALSE           shift and go to state 12

  ! SIMB            [ reduce using rule 10 (empty -> .) ]
  ! NUM             [ reduce using rule 10 (empty -> .) ]
  ! TEXT            [ reduce using rule 10 (empty -> .) ]
  ! NIL             [ reduce using rule 10 (empty -> .) ]
  ! QUOTE           [ reduce using rule 10 (empty -> .) ]
  ! LET             [ reduce using rule 10 (empty -> .) ]
  ! IF              [ reduce using rule 10 (empty -> .) ]
  ! LPAREN          [ reduce using rule 10 (empty -> .) ]
  ! TRUE            [ reduce using rule 10 (empty -> .) ]
  ! FALSE           [ reduce using rule 10 (empty -> .) ]
  ! SIMB            [ reduce using rule 22 (atom -> .) ]
  ! NUM             [ reduce using rule 22 (atom -> .) ]
  ! TEXT            [ reduce using rule 22 (atom -> .) ]
  ! NIL             [ reduce using rule 22 (atom -> .) ]
  ! QUOTE           [ reduce using rule 22 (atom -> .) ]
  ! LET             [ reduce using rule 22 (atom -> .) ]
  ! IF              [ reduce using rule 22 (atom -> .) ]
  ! LPAREN          [ reduce using rule 22 (atom -> .) ]
  ! TRUE            [ reduce using rule 22 (atom -> .) ]
  ! FALSE           [ reduce using rule 22 (atom -> .) ]
  ! RPAREN          [ reduce using rule 22 (atom -> .) ]

    item                           shift and go to state 23
    bool                           shift and go to state 2
    quoted_list                    shift and go to state 24
    empty                          shift and go to state 25
    call                           shift and go to state 26
    atom                           shift and go to state 27
    items                          shift and go to state 34

state 24

    (12) item -> quoted_list .

    SIMB            reduce using rule 12 (item -> quoted_list .)
    NUM             reduce using rule 12 (item -> quoted_list .)
    TEXT            reduce using rule 12 (item -> quoted_list .)
    NIL             reduce using rule 12 (item -> quoted_list .)
    QUOTE           reduce using rule 12 (item -> quoted_list .)
    LET             reduce using rule 12 (item -> quoted_list .)
    IF              reduce using rule 12 (item -> quoted_list .)
    LPAREN          reduce using rule 12 (item -> quoted_list .)
    TRUE            reduce using rule 12 (item -> quoted_list .)
    FALSE           reduce using rule 12 (item -> quoted_list .)
    RPAREN          reduce using rule 12 (item -> quoted_list .)


state 25

    (9) items -> empty .
    (14) item -> empty .

  ! reduce/reduce conflict for RPAREN resolved using rule 9 (items -> empty .)
    RPAREN          reduce using rule 9 (items -> empty .)
    SIMB            reduce using rule 14 (item -> empty .)
    NUM             reduce using rule 14 (item -> empty .)
    TEXT            reduce using rule 14 (item -> empty .)
    NIL             reduce using rule 14 (item -> empty .)
    QUOTE           reduce using rule 14 (item -> empty .)
    LET             reduce using rule 14 (item -> empty .)
    IF              reduce using rule 14 (item -> empty .)
    LPAREN          reduce using rule 14 (item -> empty .)
    TRUE            reduce using rule 14 (item -> empty .)
    FALSE           reduce using rule 14 (item -> empty .)

  ! RPAREN          [ reduce using rule 14 (item -> empty .) ]


state 26

    (13) item -> call .

    SIMB            reduce using rule 13 (item -> call .)
    NUM             reduce using rule 13 (item -> call .)
    TEXT            reduce using rule 13 (item -> call .)
    NIL             reduce using rule 13 (item -> call .)
    QUOTE           reduce using rule 13 (item -> call .)
    LET             reduce using rule 13 (item -> call .)
    IF              reduce using rule 13 (item -> call .)
    LPAREN          reduce using rule 13 (item -> call .)
    TRUE            reduce using rule 13 (item -> call .)
    FALSE           reduce using rule 13 (item -> call .)
    RPAREN          reduce using rule 13 (item -> call .)


state 27

    (11) item -> atom .

    SIMB            reduce using rule 11 (item -> atom .)
    NUM             reduce using rule 11 (item -> atom .)
    TEXT            reduce using rule 11 (item -> atom .)
    NIL             reduce using rule 11 (item -> atom .)
    QUOTE           reduce using rule 11 (item -> atom .)
    LET             reduce using rule 11 (item -> atom .)
    IF              reduce using rule 11 (item -> atom .)
    LPAREN          reduce using rule 11 (item -> atom .)
    TRUE            reduce using rule 11 (item -> atom .)
    FALSE           reduce using rule 11 (item -> atom .)
    RPAREN          reduce using rule 11 (item -> atom .)


state 28

    (7) list -> LPAREN items . RPAREN

    RPAREN          shift and go to state 35


state 29

    (17) call -> LPAREN SIMB items . RPAREN

    RPAREN          shift and go to state 36


state 30

    (2) exp -> LPAREN call RPAREN .

    $end            reduce using rule 2 (exp -> LPAREN call RPAREN .)


state 31

    (1) exp -> LPAREN call call . RPAREN

    RPAREN          shift and go to state 37


state 32

    (15) call -> LET LPAREN SIMB . NUM RPAREN

    NUM             shift and go to state 38


state 33

    (16) call -> IF bool atom . atom
    (18) atom -> . SIMB
    (19) atom -> . bool
    (20) atom -> . NUM
    (21) atom -> . TEXT
    (22) atom -> .
    (25) atom -> . NIL
    (23) bool -> . TRUE
    (24) bool -> . FALSE

  ! shift/reduce conflict for SIMB resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! shift/reduce conflict for NIL resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    SIMB            shift and go to state 8
    NUM             shift and go to state 3
    TEXT            shift and go to state 7
    $end            reduce using rule 22 (atom -> .)
    RPAREN          reduce using rule 22 (atom -> .)
    LET             reduce using rule 22 (atom -> .)
    IF              reduce using rule 22 (atom -> .)
    LPAREN          reduce using rule 22 (atom -> .)
    QUOTE           reduce using rule 22 (atom -> .)
    NIL             shift and go to state 10
    TRUE            shift and go to state 5
    FALSE           shift and go to state 12

  ! SIMB            [ reduce using rule 22 (atom -> .) ]
  ! NUM             [ reduce using rule 22 (atom -> .) ]
  ! TEXT            [ reduce using rule 22 (atom -> .) ]
  ! NIL             [ reduce using rule 22 (atom -> .) ]
  ! TRUE            [ reduce using rule 22 (atom -> .) ]
  ! FALSE           [ reduce using rule 22 (atom -> .) ]

    bool                           shift and go to state 2
    atom                           shift and go to state 39

state 34

    (8) items -> item items .

    RPAREN          reduce using rule 8 (items -> item items .)


state 35

    (7) list -> LPAREN items RPAREN .

    $end            reduce using rule 7 (list -> LPAREN items RPAREN .)
    SIMB            reduce using rule 7 (list -> LPAREN items RPAREN .)
    NUM             reduce using rule 7 (list -> LPAREN items RPAREN .)
    TEXT            reduce using rule 7 (list -> LPAREN items RPAREN .)
    NIL             reduce using rule 7 (list -> LPAREN items RPAREN .)
    QUOTE           reduce using rule 7 (list -> LPAREN items RPAREN .)
    LET             reduce using rule 7 (list -> LPAREN items RPAREN .)
    IF              reduce using rule 7 (list -> LPAREN items RPAREN .)
    LPAREN          reduce using rule 7 (list -> LPAREN items RPAREN .)
    TRUE            reduce using rule 7 (list -> LPAREN items RPAREN .)
    FALSE           reduce using rule 7 (list -> LPAREN items RPAREN .)
    RPAREN          reduce using rule 7 (list -> LPAREN items RPAREN .)


state 36

    (17) call -> LPAREN SIMB items RPAREN .

    SIMB            reduce using rule 17 (call -> LPAREN SIMB items RPAREN .)
    NUM             reduce using rule 17 (call -> LPAREN SIMB items RPAREN .)
    TEXT            reduce using rule 17 (call -> LPAREN SIMB items RPAREN .)
    NIL             reduce using rule 17 (call -> LPAREN SIMB items RPAREN .)
    QUOTE           reduce using rule 17 (call -> LPAREN SIMB items RPAREN .)
    LET             reduce using rule 17 (call -> LPAREN SIMB items RPAREN .)
    IF              reduce using rule 17 (call -> LPAREN SIMB items RPAREN .)
    LPAREN          reduce using rule 17 (call -> LPAREN SIMB items RPAREN .)
    TRUE            reduce using rule 17 (call -> LPAREN SIMB items RPAREN .)
    FALSE           reduce using rule 17 (call -> LPAREN SIMB items RPAREN .)
    RPAREN          reduce using rule 17 (call -> LPAREN SIMB items RPAREN .)
    $end            reduce using rule 17 (call -> LPAREN SIMB items RPAREN .)


state 37

    (1) exp -> LPAREN call call RPAREN .

    $end            reduce using rule 1 (exp -> LPAREN call call RPAREN .)


state 38

    (15) call -> LET LPAREN SIMB NUM . RPAREN

    RPAREN          shift and go to state 40


state 39

    (16) call -> IF bool atom atom .

    SIMB            reduce using rule 16 (call -> IF bool atom atom .)
    NUM             reduce using rule 16 (call -> IF bool atom atom .)
    TEXT            reduce using rule 16 (call -> IF bool atom atom .)
    NIL             reduce using rule 16 (call -> IF bool atom atom .)
    QUOTE           reduce using rule 16 (call -> IF bool atom atom .)
    LET             reduce using rule 16 (call -> IF bool atom atom .)
    IF              reduce using rule 16 (call -> IF bool atom atom .)
    LPAREN          reduce using rule 16 (call -> IF bool atom atom .)
    TRUE            reduce using rule 16 (call -> IF bool atom atom .)
    FALSE           reduce using rule 16 (call -> IF bool atom atom .)
    RPAREN          reduce using rule 16 (call -> IF bool atom atom .)
    $end            reduce using rule 16 (call -> IF bool atom atom .)


state 40

    (15) call -> LET LPAREN SIMB NUM RPAREN .

    SIMB            reduce using rule 15 (call -> LET LPAREN SIMB NUM RPAREN .)
    NUM  