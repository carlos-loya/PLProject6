Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> exp
Rule 1     exp -> LPAREN call call RPAREN
Rule 2     exp -> atom
Rule 3     exp -> quoted_list
Rule 4     exp -> call
Rule 5     quoted_list -> QUOTE list
Rule 6     list -> LPAREN items RPAREN
Rule 7     items -> item items
Rule 8     items -> empty
Rule 9     empty -> <empty>
Rule 10    item -> atom
Rule 11    item -> quoted_list
Rule 12    item -> call
Rule 13    item -> empty
Rule 14    call -> LET LPAREN SIMB NUM RPAREN
Rule 15    call -> LPAREN SIMB items RPAREN
Rule 16    atom -> SIMB
Rule 17    atom -> bool
Rule 18    atom -> NUM
Rule 19    atom -> TEXT
Rule 20    atom -> <empty>
Rule 21    bool -> TRUE
Rule 22    bool -> FALSE
Rule 23    atom -> NIL

Terminals, with rules where they appear

FALSE                : 22
LET                  : 14
LPAREN               : 1 6 14 15
NIL                  : 23
NUM                  : 14 18
QUOTE                : 5
RPAREN               : 1 6 14 15
SIMB                 : 14 15 16
TEXT                 : 19
TRUE                 : 21
error                : 

Nonterminals, with rules where they appear

atom                 : 2 10
bool                 : 17
call                 : 1 1 4 12
empty                : 8 13
exp                  : 0
item                 : 7
items                : 6 7 15
list                 : 5
quoted_list          : 3 11

Parsing method: LALR

state 0

    (0) S' -> . exp
    (1) exp -> . LPAREN call call RPAREN
    (2) exp -> . atom
    (3) exp -> . quoted_list
    (4) exp -> . call
    (16) atom -> . SIMB
    (17) atom -> . bool
    (18) atom -> . NUM
    (19) atom -> . TEXT
    (20) atom -> .
    (23) atom -> . NIL
    (5) quoted_list -> . QUOTE list
    (14) call -> . LET LPAREN SIMB NUM RPAREN
    (15) call -> . LPAREN SIMB items RPAREN
    (21) bool -> . TRUE
    (22) bool -> . FALSE

    LPAREN          shift and go to state 4
    SIMB            shift and go to state 8
    NUM             shift and go to state 3
    TEXT            shift and go to state 7
    $end            reduce using rule 20 (atom -> .)
    NIL             shift and go to state 10
    QUOTE           shift and go to state 1
    LET             shift and go to state 11
    TRUE            shift and go to state 5
    FALSE           shift and go to state 12

    bool                           shift and go to state 2
    quoted_list                    shift and go to state 6
    call                           shift and go to state 9
    exp                            shift and go to state 13
    atom                           shift and go to state 14

state 1

    (5) quoted_list -> QUOTE . list
    (6) list -> . LPAREN items RPAREN

    LPAREN          shift and go to state 15

    list                           shift and go to state 16

state 2

    (17) atom -> bool .

    $end            reduce using rule 17 (atom -> bool .)
    SIMB            reduce using rule 17 (atom -> bool .)
    NUM             reduce using rule 17 (atom -> bool .)
    TEXT            reduce using rule 17 (atom -> bool .)
    NIL             reduce using rule 17 (atom -> bool .)
    QUOTE           reduce using rule 17 (atom -> bool .)
    LET             reduce using rule 17 (atom -> bool .)
    LPAREN          reduce using rule 17 (atom -> bool .)
    TRUE            reduce using rule 17 (atom -> bool .)
    FALSE           reduce using rule 17 (atom -> bool .)
    RPAREN          reduce using rule 17 (atom -> bool .)


state 3

    (18) atom -> NUM .

    $end            reduce using rule 18 (atom -> NUM .)
    SIMB            reduce using rule 18 (atom -> NUM .)
    NUM             reduce using rule 18 (atom -> NUM .)
    TEXT            reduce using rule 18 (atom -> NUM .)
    NIL             reduce using rule 18 (atom -> NUM .)
    QUOTE           reduce using rule 18 (atom -> NUM .)
    LET             reduce using rule 18 (atom -> NUM .)
    LPAREN          reduce using rule 18 (atom -> NUM .)
    TRUE            reduce using rule 18 (atom -> NUM .)
    FALSE           reduce using rule 18 (atom -> NUM .)
    RPAREN          reduce using rule 18 (atom -> NUM .)


state 4

    (1) exp -> LPAREN . call call RPAREN
    (15) call -> LPAREN . SIMB items RPAREN
    (14) call -> . LET LPAREN SIMB NUM RPAREN
    (15) call -> . LPAREN SIMB items RPAREN

    SIMB            shift and go to state 18
    LET             shift and go to state 11
    LPAREN          shift and go to state 17

    call                           shift and go to state 19

state 5

    (21) bool -> TRUE .

    $end            reduce using rule 21 (bool -> TRUE .)
    SIMB            reduce using rule 21 (bool -> TRUE .)
    NUM             reduce using rule 21 (bool -> TRUE .)
    TEXT            reduce using rule 21 (bool -> TRUE .)
    NIL             reduce using rule 21 (bool -> TRUE .)
    QUOTE           reduce using rule 21 (bool -> TRUE .)
    LET             reduce using rule 21 (bool -> TRUE .)
    LPAREN          reduce using rule 21 (bool -> TRUE .)
    TRUE            reduce using rule 21 (bool -> TRUE .)
    FALSE           reduce using rule 21 (bool -> TRUE .)
    RPAREN          reduce using rule 21 (bool -> TRUE .)


state 6

    (3) exp -> quoted_list .

    $end            reduce using rule 3 (exp -> quoted_list .)


state 7

    (19) atom -> TEXT .

    $end            reduce using rule 19 (atom -> TEXT .)
    SIMB            reduce using rule 19 (atom -> TEXT .)
    NUM             reduce using rule 19 (atom -> TEXT .)
    TEXT            reduce using rule 19 (atom -> TEXT .)
    NIL             reduce using rule 19 (atom -> TEXT .)
    QUOTE           reduce using rule 19 (atom -> TEXT .)
    LET             reduce using rule 19 (atom -> TEXT .)
    LPAREN          reduce using rule 19 (atom -> TEXT .)
    TRUE            reduce using rule 19 (atom -> TEXT .)
    FALSE           reduce using rule 19 (atom -> TEXT .)
    RPAREN          reduce using rule 19 (atom -> TEXT .)


state 8

    (16) atom -> SIMB .

    $end            reduce using rule 16 (atom -> SIMB .)
    SIMB            reduce using rule 16 (atom -> SIMB .)
    NUM             reduce using rule 16 (atom -> SIMB .)
    TEXT            reduce using rule 16 (atom -> SIMB .)
    NIL             reduce using rule 16 (atom -> SIMB .)
    QUOTE           reduce using rule 16 (atom -> SIMB .)
    LET             reduce using rule 16 (atom -> SIMB .)
    LPAREN          reduce using rule 16 (atom -> SIMB .)
    TRUE            reduce using rule 16 (atom -> SIMB .)
    FALSE           reduce using rule 16 (atom -> SIMB .)
    RPAREN          reduce using rule 16 (atom -> SIMB .)


state 9

    (4) exp -> call .

    $end            reduce using rule 4 (exp -> call .)


state 10

    (23) atom -> NIL .

    $end            reduce using rule 23 (atom -> NIL .)
    SIMB            reduce using rule 23 (atom -> NIL .)
    NUM             reduce using rule 23 (atom -> NIL .)
    TEXT            reduce using rule 23 (atom -> NIL .)
    NIL             reduce using rule 23 (atom -> NIL .)
    QUOTE           reduce using rule 23 (atom -> NIL .)
    LET             reduce using rule 23 (atom -> NIL .)
    LPAREN          reduce using rule 23 (atom -> NIL .)
    TRUE            reduce using rule 23 (atom -> NIL .)
    FALSE           reduce using rule 23 (atom -> NIL .)
    RPAREN          reduce using rule 23 (atom -> NIL .)


state 11

    (14) call -> LET . LPAREN SIMB NUM RPAREN

    LPAREN          shift and go to state 20


state 12

    (22) bool -> FALSE .

    $end            reduce using rule 22 (bool -> FALSE .)
    SIMB            reduce using rule 22 (bool -> FALSE .)
    NUM             reduce using rule 22 (bool -> FALSE .)
    TEXT            reduce using rule 22 (bool -> FALSE .)
    NIL             reduce using rule 22 (bool -> FALSE .)
    QUOTE           reduce using rule 22 (bool -> FALSE .)
    LET             reduce using rule 22 (bool -> FALSE .)
    LPAREN          reduce using rule 22 (bool -> FALSE .)
    TRUE            reduce using rule 22 (bool -> FALSE .)
    FALSE           reduce using rule 22 (bool -> FALSE .)
    RPAREN          reduce using rule 22 (bool -> FALSE .)


state 13

    (0) S' -> exp .



state 14

    (2) exp -> atom .

    $end            reduce using rule 2 (exp -> atom .)


state 15

    (6) list -> LPAREN . items RPAREN
    (7) items -> . item items
    (8) items -> . empty
    (10) item -> . atom
    (11) item -> . quoted_list
    (12) item -> . call
    (13) item -> . empty
    (9) empty -> .
    (16) atom -> . SIMB
    (17) atom -> . bool
    (18) atom -> . NUM
    (19) atom -> . TEXT
    (20) atom -> .
    (23) atom -> . NIL
    (5) quoted_list -> . QUOTE list
    (14) call -> . LET LPAREN SIMB NUM RPAREN
    (15) call -> . LPAREN SIMB items RPAREN
    (21) bool -> . TRUE
    (22) bool -> . FALSE

  ! shift/reduce conflict for SIMB resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! shift/reduce conflict for SIMB resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! reduce/reduce conflict for NIL resolved using rule 9 (empty -> .)
  ! reduce/reduce conflict for QUOTE resolved using rule 9 (empty -> .)
  ! reduce/reduce conflict for LET resolved using rule 9 (empty -> .)
  ! reduce/reduce conflict for LPAREN resolved using rule 9 (empty -> .)
  ! reduce/reduce conflict for TRUE resolved using rule 9 (empty -> .)
  ! reduce/reduce conflict for FALSE resolved using rule 9 (empty -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 9 (empty -> .)
  ! shift/reduce conflict for NIL resolved as shift
  ! shift/reduce conflict for QUOTE resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    RPAREN          reduce using rule 9 (empty -> .)
    SIMB            shift and go to state 8
    NUM             shift and go to state 3
    TEXT            shift and go to state 7
    NIL             shift and go to state 10
    QUOTE           shift and go to state 1
    LET             shift and go to state 11
    LPAREN          shift and go to state 17
    TRUE            shift and go to state 5
    FALSE           shift and go to state 12

  ! SIMB            [ reduce using rule 9 (empty -> .) ]
  ! NUM             [ reduce using rule 9 (empty -> .) ]
  ! TEXT            [ reduce using rule 9 (empty -> .) ]
  ! NIL             [ reduce using rule 9 (empty -> .) ]
  ! QUOTE           [ reduce using rule 9 (empty -> .) ]
  ! LET             [ reduce using rule 9 (empty -> .) ]
  ! LPAREN          [ reduce using rule 9 (empty -> .) ]
  ! TRUE            [ reduce using rule 9 (empty -> .) ]
  ! FALSE           [ reduce using rule 9 (empty -> .) ]
  ! SIMB            [ reduce using rule 20 (atom -> .) ]
  ! NUM             [ reduce using rule 20 (atom -> .) ]
  ! TEXT            [ reduce using rule 20 (atom -> .) ]
  ! NIL             [ reduce using rule 20 (atom -> .) ]
  ! QUOTE           [ reduce using rule 20 (atom -> .) ]
  ! LET             [ reduce using rule 20 (atom -> .) ]
  ! LPAREN          [ reduce using rule 20 (atom -> .) ]
  ! TRUE            [ reduce using rule 20 (atom -> .) ]
  ! FALSE           [ reduce using rule 20 (atom -> .) ]
  ! RPAREN          [ reduce using rule 20 (atom -> .) ]

    item                           shift and go to state 21
    bool                           shift and go to state 2
    quoted_list                    shift and go to state 22
    empty                          shift and go to state 23
    call                           shift and go to state 24
    atom                           shift and go to state 25
    items                          shift and go to state 26

state 16

    (5) quoted_list -> QUOTE list .

    SIMB            reduce using rule 5 (quoted_list -> QUOTE list .)
    NUM             reduce using rule 5 (quoted_list -> QUOTE list .)
    TEXT            reduce using rule 5 (quoted_list -> QUOTE list .)
    NIL             reduce using rule 5 (quoted_list -> QUOTE list .)
    QUOTE           reduce using rule 5 (quoted_list -> QUOTE list .)
    LET             reduce using rule 5 (quoted_list -> QUOTE list .)
    LPAREN          reduce using rule 5 (quoted_list -> QUOTE list .)
    TRUE            reduce using rule 5 (quoted_list -> QUOTE list .)
    FALSE           reduce using rule 5 (quoted_list -> QUOTE list .)
    RPAREN          reduce using rule 5 (quoted_list -> QUOTE list .)
    $end            reduce using rule 5 (quoted_list -> QUOTE list .)


state 17

    (15) call -> LPAREN . SIMB items RPAREN

    SIMB            shift and go to state 18


state 18

    (15) call -> LPAREN SIMB . items RPAREN
    (7) items -> . item items
    (8) items -> . empty
    (10) item -> . atom
    (11) item -> . quoted_list
    (12) item -> . call
    (13) item -> . empty
    (9) empty -> .
    (16) atom -> . SIMB
    (17) atom -> . bool
    (18) atom -> . NUM
    (19) atom -> . TEXT
    (20) atom -> .
    (23) atom -> . NIL
    (5) quoted_list -> . QUOTE list
    (14) call -> . LET LPAREN SIMB NUM RPAREN
    (15) call -> . LPAREN SIMB items RPAREN
    (21) bool -> . TRUE
    (22) bool -> . FALSE

  ! shift/reduce conflict for SIMB resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! shift/reduce conflict for SIMB resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! reduce/reduce conflict for NIL resolved using rule 9 (empty -> .)
  ! reduce/reduce conflict for QUOTE resolved using rule 9 (empty -> .)
  ! reduce/reduce conflict for LET resolved using rule 9 (empty -> .)
  ! reduce/reduce conflict for LPAREN resolved using rule 9 (empty -> .)
  ! reduce/reduce conflict for TRUE resolved using rule 9 (empty -> .)
  ! reduce/reduce conflict for FALSE resolved using rule 9 (empty -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 9 (empty -> .)
  ! shift/reduce conflict for NIL resolved as shift
  ! shift/reduce conflict for QUOTE resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    RPAREN          reduce using rule 9 (empty -> .)
    SIMB            shift and go to state 8
    NUM             shift and go to state 3
    TEXT            shift and go to state 7
    NIL             shift and go to state 10
    QUOTE           shift and go to state 1
    LET             shift and go to state 11
    LPAREN          shift and go to state 17
    TRUE            shift and go to state 5
    FALSE           shift and go to state 12

  ! SIMB            [ reduce using rule 9 (empty -> .) ]
  ! NUM             [ reduce using rule 9 (empty -> .) ]
  ! TEXT            [ reduce using rule 9 (empty -> .) ]
  ! NIL             [ reduce using rule 9 (empty -> .) ]
  ! QUOTE           [ reduce using rule 9 (empty -> .) ]
  ! LET             [ reduce using rule 9 (empty -> .) ]
  ! LPAREN          [ reduce using rule 9 (empty -> .) ]
  ! TRUE            [ reduce using rule 9 (empty -> .) ]
  ! FALSE           [ reduce using rule 9 (empty -> .) ]
  ! SIMB            [ reduce using rule 20 (atom -> .) ]
  ! NUM             [ reduce using rule 20 (atom -> .) ]
  ! TEXT            [ reduce using rule 20 (atom -> .) ]
  ! NIL             [ reduce using rule 20 (atom -> .) ]
  ! QUOTE           [ reduce using rule 20 (atom -> .) ]
  ! LET             [ reduce using rule 20 (atom -> .) ]
  ! LPAREN          [ reduce using rule 20 (atom -> .) ]
  ! TRUE            [ reduce using rule 20 (atom -> .) ]
  ! FALSE           [ reduce using rule 20 (atom -> .) ]
  ! RPAREN          [ reduce using rule 20 (atom -> .) ]

    item                           shift and go to state 21
    bool                           shift and go to state 2
    quoted_list                    shift and go to state 22
    empty                          shift and go to state 23
    call                           shift and go to state 24
    atom                           shift and go to state 25
    items                          shift and go to state 27

state 19

    (1) exp -> LPAREN call . call RPAREN
    (14) call -> . LET LPAREN SIMB NUM RPAREN
    (15) call -> . LPAREN SIMB items RPAREN

    LET             shift and go to state 11
    LPAREN          shift and go to state 17

    call                           shift and go to state 28

state 20

    (14) call -> LET LPAREN . SIMB NUM RPAREN

    SIMB            shift and go to state 29


state 21

    (7) items -> item . items
    (7) items -> . item items
    (8) items -> . empty
    (10) item -> . atom
    (11) item -> . quoted_list
    (12) item -> . call
    (13) item -> . empty
    (9) empty -> .
    (16) atom -> . SIMB
    (17) atom -> . bool
    (18) atom -> . NUM
    (19) atom -> . TEXT
    (20) atom -> .
    (23) atom -> . NIL
    (5) quoted_list -> . QUOTE list
    (14) call -> . LET LPAREN SIMB NUM RPAREN
    (15) call -> . LPAREN SIMB items RPAREN
    (21) bool -> . TRUE
    (22) bool -> . FALSE

  ! shift/reduce conflict for SIMB resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! shift/reduce conflict for SIMB resolved as shift
  ! shift/reduce conflict for NUM resolved as shift
  ! shift/reduce conflict for TEXT resolved as shift
  ! reduce/reduce conflict for NIL resolved using rule 9 (empty -> .)
  ! reduce/reduce conflict for QUOTE resolved using rule 9 (empty -> .)
  ! reduce/reduce conflict for LET resolved using rule 9 (empty -> .)
  ! reduce/reduce conflict for LPAREN resolved using rule 9 (empty -> .)
  ! reduce/reduce conflict for TRUE resolved using rule 9 (empty -> .)
  ! reduce/reduce conflict for FALSE resolved using rule 9 (empty -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 9 (empty -> .)
  ! shift/reduce conflict for NIL resolved as shift
  ! shift/reduce conflict for QUOTE resolved as shift
  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    RPAREN          reduce using rule 9 (empty -> .)
    SIMB            shift and go to state 8
    NUM             shift and go to state 3
    TEXT            shift and go to state 7
    NIL             shift and go to state 10
    QUOTE           shift and go to state 1
    LET             shift and go to state 11
    LPAREN          shift and go to state 17
    TRUE            shift and go to state 5
    FALSE           shift and go to state 12

  ! SIMB            [ reduce using rule 9 (empty -> .) ]
  ! NUM             [ reduce using rule 9 (empty -> .) ]
  ! TEXT            [ reduce using rule 9 (empty -> .) ]
  ! NIL             [ reduce using rule 9 (empty -> .) ]
  ! QUOTE           [ reduce using rule 9 (empty -> .) ]
  ! LET             [ reduce using rule 9 (empty -> .) ]
  ! LPAREN          [ reduce using rule 9 (empty -> .) ]
  ! TRUE            [ reduce using rule 9 (empty -> .) ]
  ! FALSE           [ reduce using rule 9 (empty -> .) ]
  ! SIMB            [ reduce using rule 20 (atom -> .) ]
  ! NUM             [ reduce using rule 20 (atom -> .) ]
  ! TEXT            [ reduce using rule 20 (atom -> .) ]
  ! NIL             [ reduce using rule 20 (atom -> .) ]
  ! QUOTE           [ reduce using rule 20 (atom -> .) ]
  ! LET             [ reduce using rule 20 (atom -> .) ]
  ! LPAREN          [ reduce using rule 20 (atom -> .) ]
  ! TRUE            [ reduce using rule 20 (atom -> .) ]
  ! FALSE           [ reduce using rule 20 (atom -> .) ]
  ! RPAREN          [ reduce using rule 20 (atom -> .) ]

    item                           shift and go to state 21
    bool                           shift and go to state 2
    quoted_list                    shift and go to state 22
    empty                          shift and go to state 23
    call                           shift and go to state 24
    atom                           shift and go to state 25
    items                          shift and go to state 30

state 22

    (11) item -> quoted_list .

    SIMB            reduce using rule 11 (item -> quoted_list .)
    NUM             reduce using rule 11 (item -> quoted_list .)
    TEXT            reduce using rule 11 (item -> quoted_list .)
    NIL             reduce using rule 11 (item -> quoted_list .)
    QUOTE           reduce using rule 11 (item -> quoted_list .)
    LET             reduce using rule 11 (item -> quoted_list .)
    LPAREN          reduce using rule 11 (item -> quoted_list .)
    TRUE            reduce using rule 11 (item -> quoted_list .)
    FALSE           reduce using rule 11 (item -> quoted_list .)
    RPAREN          reduce using rule 11 (item -> quoted_list .)


state 23

    (8) items -> empty .
    (13) item -> empty .

  ! reduce/reduce conflict for RPAREN resolved using rule 8 (items -> empty .)
    RPAREN          reduce using rule 8 (items -> empty .)
    SIMB            reduce using rule 13 (item -> empty .)
    NUM             reduce using rule 13 (item -> empty .)
    TEXT            reduce using rule 13 (item -> empty .)
    NIL             reduce using rule 13 (item -> empty .)
    QUOTE           reduce using rule 13 (item -> empty .)
    LET             reduce using rule 13 (item -> empty .)
    LPAREN          reduce using rule 13 (item -> empty .)
    TRUE            reduce using rule 13 (item -> empty .)
    FALSE           reduce using rule 13 (item -> empty .)

  ! RPAREN          [ reduce using rule 13 (item -> empty .) ]


state 24

    (12) item -> call .

    SIMB            reduce using rule 12 (item -> call .)
    NUM             reduce using rule 12 (item -> call .)
    TEXT            reduce using rule 12 (item -> call .)
    NIL             reduce using rule 12 (item -> call .)
    QUOTE           reduce using rule 12 (item -> call .)
    LET             reduce using rule 12 (item -> call .)
    LPAREN          reduce using rule 12 (item -> call .)
    TRUE            reduce using rule 12 (item -> call .)
    FALSE           reduce using rule 12 (item -> call .)
    RPAREN          reduce using rule 12 (item -> call .)


state 25

    (10) item -> atom .

    SIMB            reduce using rule 10 (item -> atom .)
    NUM             reduce using rule 10 (item -> atom .)
    TEXT            reduce using rule 10 (item -> atom .)
    NIL             reduce using rule 10 (item -> atom .)
    QUOTE           reduce using rule 10 (item -> atom .)
    LET             reduce using rule 10 (item -> atom .)
    LPAREN          reduce using rule 10 (item -> atom .)
    TRUE            reduce using rule 10 (item -> atom .)
    FALSE           reduce using rule 10 (item -> atom .)
    RPAREN          reduce using rule 10 (item -> atom .)


state 26

    (6) list -> LPAREN items . RPAREN

    RPAREN          shift and go to state 31


state 27

    (15) call -> LPAREN SIMB items . RPAREN

    RPAREN          shift and go to state 32


state 28

    (1) exp -> LPAREN call call . RPAREN

    RPAREN          shift and go to state 33


state 29

    (14) call -> LET LPAREN SIMB . NUM RPAREN

    NUM             shift and go to state 34


state 30

    (7) items -> item items .

    RPAREN          reduce using rule 7 (items -> item items .)


state 31

    (6) list -> LPAREN items RPAREN .

    $end            reduce using rule 6 (list -> LPAREN items RPAREN .)
    SIMB            