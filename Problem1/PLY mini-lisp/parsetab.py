
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'C1AD0C11D434D6628E56039F5795BB09'
    
_lr_action_items = {'QUOTE':([0,2,3,5,7,8,10,12,15,16,18,21,22,23,24,25,31,32,35,],[1,-17,-18,-21,-19,-16,-23,-22,1,-5,1,1,-11,-13,-12,-10,-6,-15,-14,]),'$end':([0,2,3,5,6,7,8,9,10,12,13,14,16,31,32,33,35,],[-20,-17,-18,-21,-3,-19,-16,-4,-23,-22,0,-2,-5,-6,-15,-1,-14,]),'NUM':([0,2,3,5,7,8,10,12,15,16,18,21,22,23,24,25,29,31,32,35,],[3,-17,-18,-21,-19,-16,-23,-22,3,-5,3,3,-11,-13,-12,-10,34,-6,-15,-14,]),'LPAREN':([0,1,2,3,4,5,7,8,10,11,12,15,16,18,19,21,22,23,24,25,31,32,35,],[4,15,-17,-18,17,-21,-19,-16,-23,20,-22,17,-5,17,17,17,-11,-13,-12,-10,-6,-15,-14,]),'TRUE':([0,2,3,5,7,8,10,12,15,16,18,21,22,23,24,25,31,32,35,],[5,-17,-18,-21,-19,-16,-23,-22,5,-5,5,5,-11,-13,-12,-10,-6,-15,-14,]),'TEXT':([0,2,3,5,7,8,10,12,15,16,18,21,22,23,24,25,31,32,35,],[7,-17,-18,-21,-19,-16,-23,-22,7,-5,7,7,-11,-13,-12,-10,-6,-15,-14,]),'RPAREN':([2,3,5,7,8,10,12,15,16,18,21,22,23,24,25,26,27,28,30,31,32,34,35,],[-17,-18,-21,-19,-16,-23,-22,-9,-5,-9,-9,-11,-8,-12,-10,31,32,33,-7,-6,-15,35,-14,]),'SIMB':([0,2,3,4,5,7,8,10,12,15,16,17,18,20,21,22,23,24,25,31,32,35,],[8,-17,-18,18,-21,-19,-16,-23,-22,8,-5,18,8,29,8,-11,-13,-12,-10,-6,-15,-14,]),'NIL':([0,2,3,5,7,8,10,12,15,16,18,21,22,23,24,25,31,32,35,],[10,-17,-18,-21,-19,-16,-23,-22,10,-5,10,10,-11,-13,-12,-10,-6,-15,-14,]),'LET':([0,2,3,4,5,7,8,10,12,15,16,18,19,21,22,23,24,25,31,32,35,],[11,-17,-18,11,-21,-19,-16,-23,-22,11,-5,11,11,11,-11,-13,-12,-10,-6,-15,-14,]),'FALSE':([0,2,3,5,7,8,10,12,15,16,18,21,22,23,24,25,31,32,35,],[12,-17,-18,-21,-19,-16,-23,-22,12,-5,12,12,-11,-13,-12,-10,-6,-15,-14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'item':([15,18,21,],[21,21,21,]),'bool':([0,15,18,21,],[2,2,2,2,]),'quoted_list':([0,15,18,21,],[6,22,22,22,]),'list':([1,],[16,]),'empty':([15,18,21,],[23,23,23,]),'call':([0,4,15,18,19,21,],[9,19,24,24,28,24,]),'exp':([0,],[13,]),'atom':([0,15,18,21,],[14,25,25,25,]),'items':([15,18,21,],[26,27,30,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> exp","S'",1,None,None,None),
  ('exp -> LPAREN call call RPAREN','exp',4,'p_exp_dbcall','yacc.py',130),
  ('exp -> atom','exp',1,'p_exp_atom','yacc.py',134),
  ('exp -> quoted_list','exp',1,'p_exp_qlist','yacc.py',138),
  ('exp -> call','exp',1,'p_exp_call','yacc.py',142),
  ('quoted_list -> QUOTE list','quoted_list',2,'p_quoted_list','yacc.py',146),
  ('list -> LPAREN items RPAREN','list',3,'p_list','yacc.py',150),
  ('items -> item items','items',2,'p_items','yacc.py',154),
  ('items -> empty','items',1,'p_items_empty','yacc.py',158),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',162),
  ('item -> atom','item',1,'p_item_atom','yacc.py',166),
  ('item -> quoted_list','item',1,'p_item_list','yacc.py',174),
  ('item -> call','item',1,'p_item_call','yacc.py',178),
  ('item -> empty','item',1,'p_item_empty','yacc.py',182),
  ('call -> LET LPAREN SIMB NUM RPAREN','call',5,'p_call_assign','yacc.py',186),
  ('call -> LPAREN SIMB items RPAREN','call',4,'p_call','yacc.py',191),
  ('atom -> SIMB','atom',1,'p_atom_simbol','yacc.py',196),
  ('atom -> bool','atom',1,'p_atom_bool','yacc.py',204),
  ('atom -> NUM','atom',1,'p_atom_num','yacc.py',208),
  ('atom -> TEXT','atom',1,'p_atom_word','yacc.py',212),
  ('atom -> <empty>','atom',0,'p_atom_empty','yacc.py',216),
  ('bool -> TRUE','bool',1,'p_true','yacc.py',220),
  ('bool -> FALSE','bool',1,'p_false','yacc.py',224),
  ('atom -> NIL','atom',1,'p_nil','yacc.py',228),
]
